import{_ as n,o as s,c as a,e as t}from"./app-168c6b82.js";const p={},o=t(`<h1 id="链条的作用" tabindex="-1"><a class="header-anchor" href="#链条的作用" aria-hidden="true">#</a> 链条的作用</h1><p>当我们写的接口越来越多，挂载的中间件的逻辑也可能出现重复劳动的情况。如果某些中间件不是所有路由都能使用，那么它就不能被挂载到app上，此时你需要在各个路由挨个挂载。繁琐不说，还容易遗漏，后期维护修改也得小心翼翼</p><table><thead><tr><th>接口</th><th>挂载中间件</th></tr></thead><tbody><tr><td>api-1</td><td>gzip - logger - cors - etag - custom</td></tr><tr><td>api-2</td><td>gzip - logger - cors - etag - custom</td></tr><tr><td>api-3</td><td>gzip - logger - cors - etag - jwt</td></tr><tr><td>api-4</td><td>gzip - logger - cors - etag - jwt</td></tr><tr><td>api-5</td><td>gzip - logger</td></tr></tbody></table><p>针对这几个接口，我们发现它们之间使用了重复的中间件，现在改造成链条试一试</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// ./src/chain/web.chain</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> chain <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@aomex/core&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> appChain <span class="token operator">=</span> chain<span class="token punctuation">.</span>web<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span>gzip<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span>logger<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> publicChain <span class="token operator">=</span> appChain<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span>cors<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span>etag<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> authChain <span class="token operator">=</span> publicChain<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span>jwt<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// ./src/index.ts</span>
<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WebApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span>appChain<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th>接口</th><th>挂载中间件</th><th>挂载链条</th></tr></thead><tbody><tr><td>api-1</td><td><s>gzip - logger - cors - etag - custom</s></td><td>publicChain - custom</td></tr><tr><td>api-2</td><td><s>gzip - logger - cors - etag - custom</s></td><td>publicChain - custom</td></tr><tr><td>api-3</td><td><s>gzip - logger - cors - etag - jwt</s></td><td>authChain</td></tr><tr><td>api-4</td><td><s>gzip - logger - cors - etag - jwt</s></td><td>authChain</td></tr><tr><td>api-5</td><td><s>gzip - logger</s></td><td>-</td></tr></tbody></table><p>清爽多了，公共的中间件就应该抽取出来。<strong>全局公共的中间件就用链条挂载到app上，而局部公共的中间件就设置新的链条等待路由挂载</strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> router1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Router</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// 组内共享</span>
  mount<span class="token operator">:</span> publicChain<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span>custom<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span>otherChain<span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
router1<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;api-1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
router1<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;api-2&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  mount<span class="token operator">:</span> <span class="token punctuation">[</span>localMiddleware<span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> router2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Router</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// 组内共享</span>
  mount<span class="token operator">:</span> authChain<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span>otherMiddleware<span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
router2<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;api-3&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
router2<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;api-4&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> router3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Router</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
router3<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;api-5&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>链条属于中间件容器，初衷是为了让路由逻辑有完整的类型提示</p></blockquote>`,9),e=[o];function c(i,u){return s(),a("div",null,e)}const r=n(p,[["render",c],["__file","chain.html.vue"]]);export{r as default};
