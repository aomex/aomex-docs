import{_ as n,o as s,c as a,f as p}from"./app-742d623d.js";const t={},e=p(`<h1 id="创建指令" tabindex="-1"><a class="header-anchor" href="#创建指令" aria-hidden="true">#</a> 创建指令</h1><p>指令的创建其实和Web应用中的<code>路由</code>差不多，只不过换了一个库。在创建之前，我们先新建一个文件夹<code>src/commanders</code>，接着想想你的第一个指令应该做些什么？不然还是从Hello world开始吧^_^</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// ./src/commanders/say.ts</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Commander <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@aomex/commander&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> commander <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Commander</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

commander<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token string">&#39;say&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token function">action</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Hello world&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>看看能不能输出这段文字：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>npx aomex say
</code></pre></div><p>不出意外，应该是报错了。抱歉，我们忘了告诉入口应该去哪里找指令</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// ./src/cli.ts</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ConsoleApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@aomex/console&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> commanders <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@aomex/commander&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConsoleApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token function">commanders</span><span class="token punctuation">(</span><span class="token string">&#39;./src/commanders&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> code <span class="token operator">=</span> <span class="token keyword">await</span> app<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
process<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="highlight-lines"><br><br><div class="highlight-line"> </div><br><br><div class="highlight-line"> </div><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这下好了，再执行一次<code>npx aomex say</code>试试。你可能不太喜欢向全世界问好，反而更愿意问候身边的朋友，我们支持你的选择并对指令做出一些改变</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// ./src/commanders/say.ts</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> rule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@aomex/core&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> options <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@aomex/console&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Commander <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@aomex/commander&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> commander <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Commander</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

commander<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token string">&#39;say&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  mount<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token function">options</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      name<span class="token operator">:</span> rule<span class="token punctuation">.</span><span class="token function">string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">default</span><span class="token punctuation">(</span><span class="token string">&#39;world&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token function">action</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Hello </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>ctx<span class="token punctuation">.</span>options<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>现在，指令开始允许接收一个叫<code>name</code>的参数，如果你不说问候谁，那就仍是全世界</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>npx aomex say <span class="token parameter variable">--name</span> bill <span class="token comment"># Hello bill</span>
npx aomex say <span class="token parameter variable">--name</span> bro <span class="token comment"># Hello bro</span>
npx aomex say  <span class="token comment"># Hello world</span>
</code></pre></div>`,11),o=[e];function c(l,i){return s(),a("div",null,o)}const r=n(t,[["render",c],["__file","commander.html.vue"]]);export{r as default};
