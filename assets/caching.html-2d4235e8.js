import{_ as p,r as c,o,c as l,a as n,b as e,d as s,f as t}from"./app-a6b9d38d.js";const i={},u=n("h1",{id:"缓存",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#缓存","aria-hidden":"true"},"#"),s(" 缓存")],-1),r=n("p",null,"数据共享离不开缓存，可能是临时缓存，也可能是持久化缓存。框架提供了统一的缓存操作风格，并提供了常用的缓存引擎",-1),k={href:"https://www.npmjs.com/package/@aomex/file-cache",target:"_blank",rel:"noopener noreferrer"},d=n("img",{src:"https://img.shields.io/npm/v/@aomex/file-cache?logo=npm&label=@aomex/file-cache",alt:"npm"},null,-1),m={href:"https://www.npmjs.com/package/@aomex/redis-cache",target:"_blank",rel:"noopener noreferrer"},g=n("img",{src:"https://img.shields.io/npm/v/@aomex/redis-cache?logo=npm&label=@aomex/redis-cache",alt:"npm"},null,-1),h={href:"https://www.npmjs.com/package/@aomex/ioredis-cache",target:"_blank",rel:"noopener noreferrer"},v=n("img",{src:"https://img.shields.io/npm/v/@aomex/ioredis-cache?logo=npm&label=@aomex/ioredis-cache",alt:"npm"},null,-1),b=n("h2",{id:"安装",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#安装","aria-hidden":"true"},"#"),s(" 安装")],-1),y=n("h3",{id:"内存缓存",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#内存缓存","aria-hidden":"true"},"#"),s(" 内存缓存")],-1),w=n("code",null,"测试",-1),f=n("br",null,null,-1),_={href:"https://www.npmjs.com/package/lru-cache",target:"_blank",rel:"noopener noreferrer"},x=t(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> MemoryCache <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@aomex/core&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> cache <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MemoryCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="文件缓存" tabindex="-1"><a class="header-anchor" href="#文件缓存" aria-hidden="true">#</a> 文件缓存</h3>`,2),T=n("code",null,"开发 | 小型应用",-1),C=n("br",null,null,-1),P={href:"https://www.npmjs.com/package/sqlite",target:"_blank",rel:"noopener noreferrer"},j=t(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">pnpm</span> <span class="token function">add</span> @aomex/file-cache
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> FileCache <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@aomex/file-cache&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> cache <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> cache <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileCache</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  filename<span class="token operator">:</span> <span class="token string">&#39;aomex.cache&#39;</span><span class="token punctuation">,</span> <span class="token comment">// aomex.cache 是默认存储文件</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="redis缓存" tabindex="-1"><a class="header-anchor" href="#redis缓存" aria-hidden="true">#</a> Redis缓存</h3><p>适用场景：<code>生产环境 | 分布式应用</code><br></p>`,4),M={href:"https://redis.io",target:"_blank",rel:"noopener noreferrer"},V={href:"https://www.npmjs.com/package/redis",target:"_blank",rel:"noopener noreferrer"},q={href:"https://www.npmjs.com/package/ioredis",target:"_blank",rel:"noopener noreferrer"},A=t(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 如果基于 redis 库</span>
<span class="token function">pnpm</span> <span class="token function">add</span> @aomex/redis-cache redis
<span class="token comment"># 如果基于 ioredis 库</span>
<span class="token function">pnpm</span> <span class="token function">add</span> @aomex/ioredis-cache ioredis
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> RedisCache <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@aomex/ioredis-cache&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> cache <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RedisCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="方法" tabindex="-1"><a class="header-anchor" href="#方法" aria-hidden="true">#</a> 方法</h2><blockquote><p>缓存的数据类型包括：<code>T = string | number | object | boolean</code></p></blockquote><h3 id="get" tabindex="-1"><a class="header-anchor" href="#get" aria-hidden="true">#</a> get</h3><p><strong>类型：</strong> <code>&lt;T&gt;(key: string, defaultValue?: T): Promise&lt;T | null&gt;</code><br><strong>说明：</strong> 获取缓存。如果未找到缓存并且未提供默认值，则返回<code>null</code></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> MemoryCache <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@aomex/core&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> cache <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MemoryCache</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  keyPrefix<span class="token operator">:</span> <span class="token string">&#39;cache_&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 可选参数</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">await</span> cache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;key&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// null</span>
<span class="token keyword">await</span> cache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;key&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;default data&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;default data&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="set" tabindex="-1"><a class="header-anchor" href="#set" aria-hidden="true">#</a> set</h3><p><strong>类型：</strong> <code>(key: string, value: T, durationMs?: number): Promise&lt;boolean&gt;</code><br><strong>说明：</strong> 设置缓存。可以指定过期时间（毫秒）</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> sleep <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@aomex/core&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// 设置内容</span>
<span class="token keyword">await</span> cache<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">get</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&#39;key&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// null</span>
<span class="token keyword">await</span> cache<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;key&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;data1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
<span class="token keyword">await</span> cache<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">get</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&#39;key&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;data1&#39;</span>

<span class="token comment">// 指定2秒后过期</span>
<span class="token keyword">await</span> cache<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;key&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;data1&#39;</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
<span class="token keyword">await</span> cache<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">get</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&#39;key&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;data1&#39;</span>
<span class="token keyword">await</span> <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> cache<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">get</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&#39;key&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// null</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="add" tabindex="-1"><a class="header-anchor" href="#add" aria-hidden="true">#</a> add</h3><p><strong>类型：</strong> <code>(key: string, value: T, durationMs?: number): Promise&lt;boolean&gt;</code><br><strong>说明：</strong> 设置缓存。如果缓存已经存在，则设置失败，返回<code>false</code></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> sleep <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@aomex/core&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// 设置内容</span>
<span class="token keyword">await</span> cache<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">get</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&#39;key&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// null</span>
<span class="token keyword">await</span> cache<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&#39;key&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;data1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
<span class="token keyword">await</span> cache<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&#39;key&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;data2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
<span class="token keyword">await</span> cache<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">get</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&#39;key&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;data1&#39;</span>

<span class="token comment">// 指定2秒后过期</span>
<span class="token keyword">await</span> cache<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&#39;key1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;data1&#39;</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
<span class="token keyword">await</span> cache<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&#39;key1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;data2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
<span class="token keyword">await</span> <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> cache<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&#39;key1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;data2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="exists" tabindex="-1"><a class="header-anchor" href="#exists" aria-hidden="true">#</a> exists</h3><p><strong>类型：</strong> <code>(key: string): Promise&lt;boolean&gt;</code><br><strong>说明：</strong> 查看缓存是否存在</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">await</span> cache<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token string">&#39;key&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
<span class="token keyword">await</span> cache<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;key&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;value&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> cache<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token string">&#39;key&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="getorset" tabindex="-1"><a class="header-anchor" href="#getorset" aria-hidden="true">#</a> getOrSet</h3><p><strong>类型：</strong> <code>&lt;T&gt;(key: string, orSet: () =&gt; T | Promise&lt;T&gt;, durationMs?: number): Promise&lt;T&gt;</code><br><strong>说明：</strong> 获取缓存。如果没有值，则设置该缓存</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">await</span> cache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;key&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// null</span>
<span class="token keyword">await</span> cache<span class="token punctuation">.</span><span class="token function">getOrSet</span><span class="token punctuation">(</span><span class="token string">&#39;key&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token string">&#39;value&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;value&#39;</span>
<span class="token keyword">await</span> cache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;key&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;value&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="getanddelete" tabindex="-1"><a class="header-anchor" href="#getanddelete" aria-hidden="true">#</a> getAndDelete</h3><p><strong>类型：</strong> <code>&lt;T&gt;(key: string, defaultValue?: T): Promise&lt;T&gt;</code><br><strong>说明：</strong> 获取缓存后立即将该值从引擎中删除。如果未找到缓存并且未提供默认值，则返回<code>null</code></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">await</span> cache<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;key&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;value&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> cache<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">getAndDelete</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&#39;key&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;value&#39;</span>
<span class="token keyword">await</span> cache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;key&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// null</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="delete" tabindex="-1"><a class="header-anchor" href="#delete" aria-hidden="true">#</a> delete</h3><p><strong>类型：</strong> <code>(key: string): Promise&lt;boolean&gt;</code><br><strong>说明：</strong> 删除指定缓存</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">await</span> cache<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;key&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;value&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> cache<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string">&#39;key&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> cache<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">set</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&#39;key&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// null</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="deleteall" tabindex="-1"><a class="header-anchor" href="#deleteall" aria-hidden="true">#</a> deleteAll</h3><p><strong>类型：</strong> <code>(): Promise&lt;boolean&gt;</code><br><strong>说明：</strong> 删除所有缓存</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">await</span> cache<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;key1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;value&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> cache<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;key2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;value&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> cache<span class="token punctuation">.</span><span class="token function">deleteAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> cache<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">set</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&#39;key1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// null</span>
<span class="token keyword">await</span> cache<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">set</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&#39;key2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// null</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,28);function N(S,B){const a=c("ExternalLinkIcon");return o(),l("div",null,[u,r,n("p",null,[n("a",k,[d,e(a)]),n("a",m,[g,e(a)]),n("a",h,[v,e(a)])]),b,y,n("p",null,[s("适用场景："),w,f,s(" 核心库内置，缓存存储在内存里，基于"),n("a",_,[s("lru-cache"),e(a)]),s("，可以直接导入使用")]),x,n("p",null,[s("适用场景："),T,C,s(" 缓存存储在指定文件，基于"),n("a",P,[s("sqlite"),e(a)]),s("数据库")]),j,n("p",null,[s("缓存存储在"),n("a",M,[s("redis"),e(a)]),s("服务，适配了当下主流的两个node库 "),n("a",V,[s("redis"),e(a)]),s(" 和 "),n("a",q,[s("ioredis"),e(a)])]),A])}const F=p(i,[["render",N],["__file","caching.html.vue"]]);export{F as default};
